import{a as R}from"./chunk-UGPDBRZ6.js";import{c as j}from"./chunk-CUQRUE2H.js";import{a as W}from"./chunk-NYI5L2OW.js";import{a as I}from"./chunk-BBYX5IZ3.js";import{f as M,h as P}from"./chunk-KNXVHTLB.js";import{a as B}from"./chunk-KDRAUZ2P.js";import{e as D}from"./chunk-K6LPIJ6U.js";import{D as x,E as L,F as k,a as E,g as A,m as N,v as F}from"./chunk-OTESOBQZ.js";import{a as O}from"./chunk-U3UHWJW4.js";import"./chunk-TTMMANWW.js";import"./chunk-CEMMEC5V.js";import"./chunk-BJXS5QYT.js";import"./chunk-WXPYGSME.js";import"./chunk-IZOCP3TZ.js";import"./chunk-ORXXB4DH.js";import"./chunk-6CWDKGH7.js";import{Fb as p,Kb as T,Lb as h,Mb as g,Nb as a,Ob as n,Pb as C,Ub as b,db as i,fa as m,fc as l,hc as y,jc as _,kc as S,lc as w,pb as f,tb as c}from"./chunk-YNRYOK3S.js";import"./chunk-HZ6M6AS2.js";function q(o,s){if(o&1&&(a(0,"app-option",3),l(1),n()),o&2){let e=s.$implicit;p("value",e.value),i(),y(" ",e.name," ")}}function z(o,s){if(o&1&&(a(0,"app-option",3),l(1),n()),o&2){let e=s.$implicit;p("value",e),i(),y(" ",e," ")}}var d=class o{toastService=m(W);position=f("bottom_center");positions=[{value:"top_left",name:"Top Left"},{value:"top_center",name:"Top Center"},{value:"top_right",name:"Top Right"},{value:"right_center",name:"Right Center"},{value:"bottom_left",name:"Bottom Left"},{value:"bottom_center",name:"Bottom Center"},{value:"left_center",name:"Left Center"},{value:"right_bottom",name:"Right Bottom"}];types=["success","warning","danger"];type=f(void 0);showToast(){this.toastService.open({position:this.position(),type:this.type(),message:"Current time is: "+new Date().toLocaleTimeString(),closeDelay:5e5})}static \u0275fac=function(e){return new(e||o)};static \u0275cmp=c({type:o,selectors:[["doc-show-case-toast"]],inputs:{position:[1,"position"],type:[1,"type"]},outputs:{position:"positionChange",type:"typeChange"},decls:16,vars:2,consts:[[1,"show-case"],[1,"configuration"],[1,"option",3,"ngModelChange","ngModel"],[3,"value"],["placeholder","Default",1,"option",3,"ngModelChange","ngModel"],["appButton","",3,"click"]],template:function(e,t){e&1&&(a(0,"div",0)(1,"div",1)(2,"app-form-field")(3,"app-label"),l(4,"Position"),n(),a(5,"app-select",2),w("ngModelChange",function(r){return S(t.position,r)||(t.position=r),r}),h(6,q,2,2,"app-option",3,T),n()(),a(8,"app-form-field")(9,"app-label"),l(10,"Type"),n(),a(11,"app-select",4),w("ngModelChange",function(r){return S(t.type,r)||(t.type=r),r}),h(12,z,2,2,"app-option",3,T),n()()(),a(14,"button",5),b("click",function(){return t.showToast()}),l(15,"Show Toast"),n()()),e&2&&(i(5),_("ngModel",t.position),i(),g(t.positions),i(5),_("ngModel",t.type),i(),g(t.types))},dependencies:[I,x,L,F,A,N,j,R],styles:[".option[_ngcontent-%COMP%]{width:250px}.configuration[_ngcontent-%COMP%]{flex-direction:column;flex-wrap:wrap;gap:8px}"]})};var u="toast",U=class o{sourceTreeBuilder=m(E);sourceTree=[{name:"toast",files:[...this.sourceTreeBuilder.fullComponent(u,u),...this.sourceTreeBuilder.service("toast",u),this.sourceTreeBuilder.component("toast-close",u)],hideName:!0}];apiInfo={entities:[{name:"ToastService",type:"service",description:"Service for toast",methods:[{name:"open",returnType:"Observable<void>",returnDescription:"returns observable that emits when the toast is closed",description:"Opens the toast",params:[{name:"options",type:"object",fields:[{name:"message",type:"string",description:"text to display",default:M},{name:"position",type:`top_left
                    | top_center
                    | top_right
                    | right_center
                    | right_bottom
                    | bottom_center
                    | bottom_left
                    | left_center`,description:"Defines where to put the toast",default:"right_bottom"},{name:"showCloseIcon",type:"boolean",description:"Shows close icon",default:"true"},{name:"autoClose",type:"boolean",description:"Automatically closes the toast when the closeDelay expires.",default:"true"},{name:"closeDelay",type:"number",description:"The duration (in milliseconds) to wait before automatically closing the toast.",default:"3000ms"},{name:"type",type:"default | success | warning | danger",description:"Type of the toast",default:"defaukt"}]}]}]}]};static \u0275fac=function(e){return new(e||o)};static \u0275cmp=c({type:o,selectors:[["doc-toast-page"]],decls:6,vars:4,consts:[[3,"subTitle","label"],["name","toast"],["name","toast",3,"sourceTree"],[3,"apiInfo"]],template:function(e,t){e&1&&(a(0,"doc-blueprint-page",0)(1,"doc-show-case",1),C(2,"doc-show-case-toast"),n(),C(3,"doc-command-installation",1)(4,"doc-source-tree",2)(5,"doc-api-info",3),n()),e&2&&(p("subTitle","A toast is a brief message that provides user feedback, often disappearing automatically.")("label","Toast"),i(4),p("sourceTree",t.sourceTree),i(),p("apiInfo",t.apiInfo))},dependencies:[O,D,d,k,B,P],encapsulation:2})};export{U as ToastPageComponent};
