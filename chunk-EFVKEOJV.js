import{b as g,c as w,d as v,e as d,f as A,h as b}from"./chunk-KNXVHTLB.js";import{a as S}from"./chunk-KDRAUZ2P.js";import{e as x}from"./chunk-K6LPIJ6U.js";import{F as P,a as _}from"./chunk-OTESOBQZ.js";import{a as I}from"./chunk-U3UHWJW4.js";import"./chunk-TTMMANWW.js";import"./chunk-CEMMEC5V.js";import"./chunk-BJXS5QYT.js";import"./chunk-WXPYGSME.js";import"./chunk-IZOCP3TZ.js";import"./chunk-ORXXB4DH.js";import"./chunk-6CWDKGH7.js";import{Fb as t,Kb as f,Lb as h,Mb as y,Nb as a,Ob as s,Pb as m,db as n,fa as u,fc as C,gc as T,tb as p}from"./chunk-YNRYOK3S.js";import"./chunk-HZ6M6AS2.js";function M(o,c){if(o&1&&(a(0,"app-accordion-item",2)(1,"app-accordion-body"),C(2),s()()),o&2){let e=c.$implicit,r=c.$index;t("label",e.title)("expanded",r===0),n(2),T(e.description)}}var l=class o{items=[{title:"How to add ngverse to a project?",description:"run: ng add ngverse"},{title:"How to add an element?",description:"run: ng g ngverse:element [name]"},{title:"How to customize an element?",description:"The source code is yours. do whatever you want to"},{title:"How to style an element",description:"Elements come with default styles for a polished look right out of the box, but you can easily customize them within their SCSS files to suit your needs."},{title:"Why it is called element and not component?",description:"The term element is used because ngverse is not limited to components.  It includes directives, pipes, functions, and more, making element a broader and more inclusive term."}];static \u0275fac=function(e){return new(e||o)};static \u0275cmp=p({type:o,selectors:[["doc-show-case-accordion"]],decls:4,vars:1,consts:[[1,"show-case"],[3,"multi"],[3,"label","expanded"]],template:function(e,r){e&1&&(a(0,"div",0)(1,"app-accordion",1),h(2,M,3,3,"app-accordion-item",2,f),s()()),e&2&&(n(),t("multi",!0),n(),y(r.items))},dependencies:[w,g,v],styles:[".show-case[_ngcontent-%COMP%]{display:flex;gap:8px}app-accordion[_ngcontent-%COMP%]{width:100%}"]})};var i="accordion",B=class o{sourceTreeBuilder=u(_);sourceTree=[{name:i,files:[...this.sourceTreeBuilder.fullComponent("accordion",i),...this.sourceTreeBuilder.fullComponent("accordion-item",i),this.sourceTreeBuilder.component("accordion-header",i),this.sourceTreeBuilder.component("accordion-body",i),this.sourceTreeBuilder.component("expand-icon",i),this.sourceTreeBuilder.file("accordion-animations",i)],hideName:!0}];apiInfo={reliesOn:"https://material.angular.io/cdk/accordion/overview",ariaLink:"https://www.w3.org/WAI/ARIA/apg/patterns/accordion/",entities:[{name:"AccordionComponent",selector:"app-accordion",type:"component",description:"The main component, that includes accordion-items",inputs:[{name:"multi",type:"boolean",description:"allows multiple panels to be open simultaneously",default:"false"}],methods:[{name:"closeAll",returnType:d,description:"closes all accordion-items"},{name:"openAll",returnType:d,description:"opens all accordion-items"}]},{name:"AccordionItemComponent",selector:"app-accordion-item",type:"component",description:"The component is used within an accordion to render an item.",inputs:[{name:"label",type:"string",description:"label of the accordion-item",default:A},{name:"disabled",type:"boolean",description:"disables accordion-item",default:"false"},{name:"expanded",type:"boolean",description:"expands the accordion-item",default:"false"}],outputs:[{name:"opened",value:d,description:"emits when the accordion item is opened"},{name:"closed",value:d,description:"emits when the accordion item is closed"},{name:"destroyed",value:d,description:"emits when the accordion item is destroyed"}],methods:[{name:"toggle",description:"toggles the accordion-item",returnType:"void",params:[]},{name:"open",description:"opens the accordion-item",returnType:"void",params:[]},{name:"close",description:"closes the accordion-item",returnType:"void"}]},{name:"AccordionBodyComponent",selector:"app-accordion-body",type:"component",description:"The component is used within an accordion-item to render its ng-content.",inputs:[]},{name:"AccordionHeaderComponent",selector:"app-accordion-header",type:"component",description:"The component can replace the label inside an accordion item and uses ng-content to render its content.",inputs:[]}]};static \u0275fac=function(e){return new(e||o)};static \u0275cmp=p({type:o,selectors:[["doc-accordion-page"]],decls:6,vars:4,consts:[[3,"subTitle","label"],["name","accordion",3,"sourceTree"],["name","accordion"],["type","component","name","accordion"],[3,"apiInfo"]],template:function(e,r){e&1&&(a(0,"doc-blueprint-page",0),m(1,"doc-source-tree",1),a(2,"doc-show-case",2),m(3,"doc-show-case-accordion"),s(),m(4,"doc-command-installation",3)(5,"doc-api-info",4),s()),e&2&&(t("subTitle","An accordion is a vertically stacked set of interactive headings that each contain a title and expandable content.")("label","Accordion"),n(),t("sourceTree",r.sourceTree),n(4),t("apiInfo",r.apiInfo))},dependencies:[I,x,b,P,l,S],encapsulation:2})};export{B as AccordionPageComponent};
