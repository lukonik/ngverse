import{a as R}from"./chunk-RPL2EVWZ.js";import{c as j}from"./chunk-LURVHVBU.js";import{a as W}from"./chunk-KDUAOTU4.js";import{f as P,h as O}from"./chunk-V7ENVSME.js";import{a as B}from"./chunk-GPI6OBII.js";import{e as E}from"./chunk-CZ5TROGG.js";import{F as x,G as L,H as k,a as M,b as A,h as D,n as N,w as F}from"./chunk-QJNV3SJE.js";import"./chunk-P3NORFJ7.js";import"./chunk-QKQ5N64N.js";import"./chunk-AU7E6JWS.js";import{k as I}from"./chunk-4OF5TJLW.js";import"./chunk-5SVHC6KN.js";import"./chunk-5SY4JRTO.js";import"./chunk-AC2A7OJH.js";import{Gb as p,Lb as T,Mb as h,Nb as g,Ob as a,Pb as n,Qb as C,Vb as b,eb as i,fa as l,gc as m,ic as y,kc as _,lc as S,mc as w,qb as f,ub as c}from"./chunk-4E37DFQL.js";import"./chunk-HZ6M6AS2.js";function q(o,s){if(o&1&&(a(0,"app-option",3),m(1),n()),o&2){let e=s.$implicit;p("value",e.value),i(),y(" ",e.name," ")}}function z(o,s){if(o&1&&(a(0,"app-option",3),m(1),n()),o&2){let e=s.$implicit;p("value",e),i(),y(" ",e," ")}}var d=class o{toastService=l(W);position=f("bottom_center");positions=[{value:"top_left",name:"Top Left"},{value:"top_center",name:"Top Center"},{value:"top_right",name:"Top Right"},{value:"right_center",name:"Right Center"},{value:"bottom_left",name:"Bottom Left"},{value:"bottom_center",name:"Bottom Center"},{value:"left_center",name:"Left Center"},{value:"right_bottom",name:"Right Bottom"}];types=["default","success","warning","danger"];type=f("default");showToast(){this.toastService.open({position:this.position(),type:this.type(),message:"Current time is: "+new Date().toLocaleTimeString(),closeDelay:1e3})}static \u0275fac=function(e){return new(e||o)};static \u0275cmp=c({type:o,selectors:[["doc-show-case-toast"]],inputs:{position:[1,"position"],type:[1,"type"]},outputs:{position:"positionChange",type:"typeChange"},decls:16,vars:2,consts:[[1,"show-case"],[1,"configuration"],[1,"option",3,"ngModelChange","ngModel"],[3,"value"],["appButton","",3,"click"]],template:function(e,t){e&1&&(a(0,"div",0)(1,"div",1)(2,"app-form-field")(3,"app-label"),m(4,"Position"),n(),a(5,"app-select",2),w("ngModelChange",function(r){return S(t.position,r)||(t.position=r),r}),h(6,q,2,2,"app-option",3,T),n()(),a(8,"app-form-field")(9,"app-label"),m(10,"Type"),n(),a(11,"app-select",2),w("ngModelChange",function(r){return S(t.type,r)||(t.type=r),r}),h(12,z,2,2,"app-option",3,T),n()()(),a(14,"button",4),b("click",function(){return t.showToast()}),m(15,"Show Toast"),n()()),e&2&&(i(5),_("ngModel",t.position),i(),g(t.positions),i(5),_("ngModel",t.type),i(),g(t.types))},dependencies:[I,x,L,F,D,N,j,R],styles:[".option[_ngcontent-%COMP%]{width:250px}.configuration[_ngcontent-%COMP%]{flex-direction:column;flex-wrap:wrap;gap:8px}"]})};var u="toast",U=class o{sourceTreeBuilder=l(A);sourceTree=[{name:"toast",files:[...this.sourceTreeBuilder.fullComponent(u,u),...this.sourceTreeBuilder.service("toast",u),this.sourceTreeBuilder.component("toast-close",u)],hideName:!0}];apiInfo={entities:[{name:"ToastService",type:"service",description:"Service for toast",methods:[{name:"open",returnType:"Observable<void>",returnDescription:"returns observable that emits when the toast is closed",description:"Opens the toast",params:[{name:"options",type:"object",fields:[{name:"message",type:"string",description:"text to display",default:P},{name:"position",type:`top_left
                    | top_center
                    | top_right
                    | right_center
                    | right_bottom
                    | bottom_center
                    | bottom_left
                    | left_center`,description:"Defines where to put the toast",default:"right_bottom"},{name:"showCloseIcon",type:"boolean",description:"Shows close icon",default:"true"},{name:"autoClose",type:"boolean",description:"Automatically closes the toast when the closeDelay expires.",default:"true"},{name:"closeDelay",type:"number",description:"The duration (in milliseconds) to wait before automatically closing the toast.",default:"3000ms"},{name:"type",type:"default | success | warning | danger",description:"Type of the toast",default:"defaukt"}]}]}]}]};static \u0275fac=function(e){return new(e||o)};static \u0275cmp=c({type:o,selectors:[["doc-toast-page"]],decls:6,vars:4,consts:[[3,"subTitle","label"],["name","toast"],["name","toast",3,"sourceTree"],[3,"apiInfo"]],template:function(e,t){e&1&&(a(0,"doc-blueprint-page",0)(1,"doc-show-case",1),C(2,"doc-show-case-toast"),n(),C(3,"doc-command-installation",1)(4,"doc-source-tree",2)(5,"doc-api-info",3),n()),e&2&&(p("subTitle","A toast is a brief message that provides user feedback, often disappearing automatically.")("label","Toast"),i(4),p("sourceTree",t.sourceTree),i(),p("apiInfo",t.apiInfo))},dependencies:[M,E,d,k,B,O],encapsulation:2})};export{U as ToastPageComponent};
